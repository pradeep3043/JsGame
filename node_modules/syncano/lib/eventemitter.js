'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _forEach2 = require('lodash/forEach');

var _forEach3 = _interopRequireDefault(_forEach2);

var _pull2 = require('lodash/pull');

var _pull3 = _interopRequireDefault(_pull2);

var _isArray2 = require('lodash/isArray');

var _isArray3 = _interopRequireDefault(_isArray2);

exports.default = EventEmitter;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* A simple implementation of an EventEmitter. Created for compatibility with environments that don't have access to native node modules (like React Native). Not meant to be used on it's own.
*/

function EventEmitter() {
    this.events = {};
}

EventEmitter.prototype.on = function (event, listener) {
    if (!(0, _isArray3.default)(this.events[event])) {
        this.events[event] = [];
    }
    this.events[event].push(listener);
};

EventEmitter.prototype.removeListener = function (event, listener) {
    if ((0, _isArray3.default)(this.events[event])) {
        (0, _pull3.default)(this.events[event], listener);
    }
};

EventEmitter.prototype.emit = function (event) {
    var _this = this,
        _arguments = arguments;

    if ((0, _isArray3.default)(this.events[event])) {
        (function () {
            var listeners = _this.events[event].slice();
            var args = [].slice.call(_arguments, 1);
            (0, _forEach3.default)(listeners, function (listener) {
                return listener.apply(_this, args);
            });
        })();
    }
};
module.exports = exports['default'];
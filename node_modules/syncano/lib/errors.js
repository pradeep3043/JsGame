'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _isEmpty2 = require('lodash/isEmpty');

var _isEmpty3 = _interopRequireDefault(_isEmpty2);

var _isArray2 = require('lodash/isArray');

var _isArray3 = _interopRequireDefault(_isArray2);

var _reduce2 = require('lodash/reduce');

var _reduce3 = _interopRequireDefault(_reduce2);

var _isObject2 = require('lodash/isObject');

var _isObject3 = _interopRequireDefault(_isObject2);

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

exports.SyncanoError = SyncanoError;
exports.PaginationError = PaginationError;
exports.ValidationError = ValidationError;
exports.RequestError = RequestError;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SyncanoError(message) {
  this.name = 'SyncanoError';
  this.message = message || '';
  this.stack = new Error().stack;
} // something is wrong with babel6 in terms of error inheritance
// so for now we will use almost plain js here


SyncanoError.prototype = Object.create(Error.prototype);
SyncanoError.prototype.constructor = SyncanoError;

function PaginationError(message) {
  this.name = 'PaginationError';
  this.message = message || '';
  this.stack = new Error().stack;
}

PaginationError.prototype = Object.create(SyncanoError.prototype);
PaginationError.prototype.constructor = SyncanoError;

function ValidationError() {
  var errors = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  this.name = 'ValidationError';
  this.stack = new Error().stack;
  this.errors = errors;
  this.message = (0, _map3.default)(errors, function (value, key) {
    return '"' + key + '" ' + value.join(', ');
  }).join('\n');
}

ValidationError.prototype = Object.create(SyncanoError.prototype);
ValidationError.prototype.constructor = ValidationError;

function RequestError(error) {
  var _this = this;

  this.name = 'RequestError';
  this.status = error.status;
  this.errors = error.response.body;
  this.originalError = error;
  this.response = error.response;
  this.message = '';
  this.stack = new Error().stack;

  if ((0, _isObject3.default)(this.errors)) {
    this.message = (0, _reduce3.default)(['detail', 'error', '__all__', 'non_field_errors'], function (result, value) {
      var error = _this.errors[value];

      if ((0, _isArray3.default)(error)) {
        error = error.join(', ');
      }

      result += error || '';
      return result;
    }, this.message);

    if ((0, _isEmpty3.default)(this.message)) {
      this.message = (0, _map3.default)(this.errors, function (value, key) {
        if ((0, _isArray3.default)(value)) {
          value = value.join(', ');
        }
        return '"' + key + '" ' + value;
      }).join('\n');
    }
  }

  if ((0, _isEmpty3.default)(this.message)) {
    this.message = error.message;
  }
}

RequestError.prototype = Object.create(SyncanoError.prototype);
RequestError.prototype.constructor = RequestError;
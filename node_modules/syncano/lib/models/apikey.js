'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign2 = require('lodash/assign');

var _assign3 = _interopRequireDefault(_assign2);

var _stampit = require('stampit');

var _stampit2 = _interopRequireDefault(_stampit);

var _base = require('./base');

var _querySet = require('../querySet');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ApiKeyQuerySet = (0, _stampit2.default)().compose(_querySet.BaseQuerySet, _querySet.Get, _querySet.Create, _querySet.BulkCreate, _querySet.Delete, _querySet.Update, _querySet.List).methods({
  reset: function reset() {
    var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    this.properties = (0, _assign3.default)({}, this.properties, properties);
    this.method = 'POST';
    this.endpoint = 'reset';
    return this;
  }
});

var ApiKeyMeta = (0, _base.Meta)({
  name: 'apiKey',
  pluralName: 'apiKeys',
  endpoints: {
    'detail': {
      'methods': ['delete', 'patch', 'put', 'get'],
      'path': '/v1.1/instances/{instanceName}/api_keys/{id}/'
    },
    'list': {
      'methods': ['post', 'get'],
      'path': '/v1.1/instances/{instanceName}/api_keys/'
    },
    'reset': {
      'methods': ['post'],
      'path': '/v1.1/instances/{instanceName}/api_keys/{id}/reset_key/'
    }
  }
});

var ApiKeyConstraints = {
  instanceName: {
    presence: true,
    length: {
      minimum: 5
    }
  },
  description: {
    string: true
  },
  ignore_acl: {
    boolean: true
  },
  allow_user_create: {
    boolean: true
  },
  allow_anonymous_read: {
    boolean: true
  }
};

/**
 * OO wrapper around instance api keys {@link http://docs.syncano.io/docs/authentication endpoint}.
 * @constructor
 * @type {ApiKey}

 * @property {Number} id
 * @property {String} instanceName
 * @property {String} [api_key = null]
 * @property {Boolean} [allow_user_create = null]
 * @property {Boolean} [ignore_acl = null]
 * @property {String} [links = {}]
 */
var ApiKey = (0, _stampit2.default)().compose(_base.Model).setMeta(ApiKeyMeta).methods({
  reset: function reset() {
    var meta = this.getMeta();
    var path = meta.resolveEndpointPath('reset', this);

    return this.makeRequest('POST', path);
  }
}).setQuerySet(ApiKeyQuerySet).setConstraints(ApiKeyConstraints);

exports.default = ApiKey;
module.exports = exports['default'];
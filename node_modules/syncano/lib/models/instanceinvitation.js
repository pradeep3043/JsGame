'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign2 = require('lodash/assign');

var _assign3 = _interopRequireDefault(_assign2);

var _stampit = require('stampit');

var _stampit2 = _interopRequireDefault(_stampit);

var _base = require('./base');

var _querySet = require('../querySet');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var InstanceInvitationQuerySet = (0, _stampit2.default)().compose(_querySet.BaseQuerySet, _querySet.Create, _querySet.BulkCreate, _querySet.Get, _querySet.GetOrCreate, _querySet.Delete, _querySet.List, _querySet.Delete).methods({
  resend: function resend() {
    var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    this.properties = (0, _assign3.default)({}, this.properties, properties);
    this.method = 'POST';
    this.endpoint = 'resend';
    return this;
  }
});

var InstanceInvitationMeta = (0, _base.Meta)({
  name: 'instanceInvitation',
  pluralName: 'instanceInvitations',
  endpoints: {
    'detail': {
      'methods': ['delete', 'get'],
      'path': '/v1.1/instances/{instanceName}/invitations/{id}/'
    },
    'list': {
      'methods': ['post', 'get'],
      'path': '/v1.1/instances/{instanceName}/invitations/'
    },
    'resend': {
      'methods': ['post'],
      'path': '/v1.1/instances/{instanceName}/invitations/{id}/resend/'
    }
  }
});

var InstanceInvitationConstraints = {
  email: {
    presence: true,
    email: true
  },
  role: {
    presence: true,
    inclusion: ['full', 'write', 'read']
  },
  instanceName: {
    presence: true,
    length: {
      minimum: 5
    }
  }
};

/**
 * OO wrapper around instance invitations {@link # endpoint}.
 * @constructor
 * @type {InstanceInvitation}

 * @property {String} email
 * @property {String} role
 * @property {String} [key = null]
 * @property {String} [inviter = null]
 * @property {String} [status = null]
 * @property {Number} [id = null]
 * @property {String} [description = null]
 * @property {String} [links = {}]
 * @property {Date} [created_at = null]
 * @property {Date} [updated_at = null]
 */
var InstanceInvitation = (0, _stampit2.default)().compose(_base.Model).setMeta(InstanceInvitationMeta).methods({
  resend: function resend() {
    var meta = this.getMeta();
    var path = meta.resolveEndpointPath('resend', this);

    return this.makeRequest('POST', path);
  }
}).setQuerySet(InstanceInvitationQuerySet).setConstraints(InstanceInvitationConstraints);

exports.default = InstanceInvitation;
module.exports = exports['default'];
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign2 = require('lodash/assign');

var _assign3 = _interopRequireDefault(_assign2);

var _stampit = require('stampit');

var _stampit2 = _interopRequireDefault(_stampit);

var _base = require('./base');

var _querySet = require('../querySet');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var APNSDeviceQuerySet = (0, _stampit2.default)().compose(_querySet.BaseQuerySet, _querySet.List, _querySet.Create, _querySet.BulkCreate, _querySet.Delete, _querySet.Get, _querySet.Update, _querySet.UpdateOrCreate, _querySet.GetOrCreate).methods({
  sendMessage: function sendMessage() {
    var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var content = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    var _getConfig = this.getConfig();

    var APNSMessage = _getConfig.APNSMessage;

    return APNSMessage.please().sendToDevice((0, _assign3.default)({}, this.properties, properties), content);
  }
});

var APNSDeviceMeta = (0, _base.Meta)({
  name: 'apnsdevice',
  pluralName: 'apnsdevices',
  endpoints: {
    'detail': {
      'methods': ['delete', 'patch', 'put', 'get'],
      'path': '/v1.1/instances/{instanceName}/push_notifications/apns/devices/{registration_id}/'
    },
    'list': {
      'methods': ['post', 'get'],
      'path': '/v1.1/instances/{instanceName}/push_notifications/apns/devices/'
    }
  }
});

var APNSDeviceConstraints = {
  instanceName: {
    presence: true,
    length: {
      minimum: 5
    }
  },
  user: {
    numericality: {
      noStrings: true
    }
  },
  registration_id: {
    presence: true,
    string: true
  },
  device_id: {
    string: true
  },
  metadata: {
    object: true
  },
  is_active: {
    boolean: true
  }
};

/**
 * OO wrapper around instance APNS devices {@link # endpoint}.
 * @constructor
 * @type {APNSDevice}

 * @property {String} registration_id
 * @property {String} device_id
 * @property {String} instanceName
 * @property {String} [label = null]
 * @property {Number} [user = null]
 * @property {Boolean} [is_active = true]
 * @property {String} [links = {}]
 * @property {Date} [created_at = null]
 * @property {Date} [updated_at = null]
 */
var APNSDevice = (0, _stampit2.default)().compose(_base.Model).setMeta(APNSDeviceMeta).setQuerySet(APNSDeviceQuerySet).setConstraints(APNSDeviceConstraints);

exports.default = APNSDevice;
module.exports = exports['default'];